apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: demo-config
  name: yoda
  namespace: lab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yoda
  strategy:  # Estratégia de atualização do deployment
    rollingUpdate:  # Atualização rolling (em cascata)
      maxSurge: 1  # Número máximo de pods extras que podem ser criados acima do número desejado durante uma atualização
      maxUnavailable: 1  # Número máximo de pods que podem ficar indisponíveis durante uma atualização
  minReadySeconds: 5      
  template:
    metadata:
      labels:
        app: yoda
      namespace: lab  
    spec:
      nodeSelector:  # Seletor de nós onde os pods devem ser programados
        kubernetes.io/os: linux
      containers:
       - name: yoda
         image: gblbjj/yoda:1.0.0
         ports:
          - containerPort: 3000
         resources:  # Recursos alocados para o container
            requests:  # Recursos solicitados
              cpu: 250m  # 250 milicores de CPU
              memory: 250Mi  # 250 Mebibytes de memória
            limits:  # Limites máximos de recursos
              cpu: 500m  # 500 milicores de CPU
              memory: 500Mi  # 500 Mebibytes de memória 


---

apiVersion: v1
kind: Service
metadata:
  name: yoda-service
  namespace: lab
  annotations:  # Anotações adicionadas ao serviço
    prometheus.io/port: "metrics"  # Porta para Prometheus coletar métricas
    prometheus.io/scrape: "true"   # Indica que Prometheus deve coletar métricas deste serviço
  labels:  # Rótulos atribuídos ao serviço
    app.kubernetes.io/part-of: yoda  # Rótulo que identifica a qual aplicaçã
spec:
  type: ClusterIP  # Tipo de serviço, no caso, um ClusterIP
  selector:  # Seletor de pods que este serviço irá direcionar o tráfego
    app: yoda  # O serviço direcionará tráfego para pods com o rótulo 'app: bifrost-my-service'
  ports:  # Definição das portas expostas pelo serviço
    - port: 3000 # Porta do serviço
      protocol: TCP  # Protocolo usado (TCP neste caso)
      targetPort: 3000  # Porta em que os pods do serviço estão escutando
      name: "metrics"  # Nome da porta, usada para identificação


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: yoda-ingress
  namespace: lab
spec:
  ingressClassName: nginx
  rules:
    - host: yoda.127.0.0.1.nip.io
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: yoda-service
              port:
                number: 3000

